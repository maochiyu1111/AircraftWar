@startuml
'https://plantuml.com/class-diagram
abstract class AbstractFlyingObject
{
# locationX:int
# locationY:int
# speedX:int
# speedY:int
# image:BufferedImage
# width:int
# height:int
# isValid:boolean
+ AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
+ forward():void
+ crash(AbstractFlyingObject flyingObject):boolean
+ setLocation(double locationX, double locationY):void
+ getLocationX():int
+ getLocationY():int
+ getSpeedY():int
+ getImage():BufferedImage
+ getWidth():int
+ getHeight():int
+ notValid():boolean
+ vanish():void
}


abstract class AbstractAircraft
{
# maxHp:int
# hp:int
+ AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
+ decreaseHp(int decrease):void
+ getHp():int
+ {abstract} shoot():List<BaseBullet>
}


class HeroAircraft {
- shootNum:int
- power:int
- direction:int
+ HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
+ forward():void
+ shoot():List<BaseBullet>
+ hpAdding():void
+ addShootNum():void
}





class MobEnemy {
+ MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
+ forward():void
+ shoot():List<BaseBullet>
}



class EliteEnemy {
+ eliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
+ forward():void
+ shoot():List<BaseBullet>
}



class BaseBullet
{
- power:int
+ BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
+ forward():void
+ getPower():int
}


class HeroBullet {
+ HeroBullet(int locationX, int locationY,
int speedX, int speedY, int power)
}


class EnemyBullet {
+ EnemyBullet(int locationX, int locationY,
int speedX, int speedY, int power)
}



abstract class GameProp {

+ GameProp(int locationX, int locationY, int speedX, int speedY)
+ forward():void
}


class HpAddProp {

+ GameProp(int locationX, int locationY, int speedX, int speedY)
+ takeEffect(HeroAircraft obj):void

}


class FirepowerProp {

+ GameProp(int locationX, int locationY, int speedX, int speedY)
+ takeEffect(HeroAircraft obj):void

}


class BombProp {

+ GameProp(int locationX, int locationY, int speedX, int speedY)
+ takeEffect():void

}


AbstractAircraft <|-- "继承" HeroAircraft
AbstractAircraft <|-- "继承" MobEnemy
AbstractAircraft <|-- "继承" EliteEnemy
BaseBullet <|-- "继承" HeroBullet
BaseBullet <|-- "继承" EnemyBullet
AbstractFlyingObject <|-- "继承" AbstractAircraft
AbstractFlyingObject <|-- "继承" BaseBullet
AbstractFlyingObject <|-- "继承" GameProp
GameProp <|-- "继承" HpAddProp
GameProp <|-- "继承" FirepowerProp
GameProp <|-- "继承" BombProp
'HeroBullet <--o "聚合" HeroAircraft
'EnemyBullet <--o "聚合" EliteEnemy
'EliteEnemy <-- "关联" GameProp
'HpAddProp <-- "关联" HeroAircraft
'FirepowerProp <-- "关联" HeroAircraft

@enduml